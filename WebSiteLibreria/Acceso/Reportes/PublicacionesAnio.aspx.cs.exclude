using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Script.Services;
using System.Web.Services;
using System.Web.UI;
using System.Web.UI.WebControls;
using Unam.CoHu.Libreria.Controller;
using Unam.CoHu.Libreria.Controller.Security;
using Unam.CoHu.Libreria.Model.Views;

public partial class Acceso_Reportes_PublicacionesAnio : SecurePage
{
    ReportesController libreriaBd = new ReportesController();

    List<TituloLibreriaView> _Titulos = null;
    Paginacion _Paginacion = null;

    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            _Paginacion = new Paginacion() { FilasPorPagina = GridViewResultado.PageSize, PaginaActual = 1, IsNavigating = false };
            ViewState["busquedaHabilitada"] = false;
            ViewState["isSortDescending"] = false;
            ViewState["paginacion"] = _Paginacion;
            //CargarTodos(string.Empty, false);
        }
        else
        {
            _Titulos = ViewState["titulos"] as List<TituloLibreriaView>;
            _Paginacion = ViewState["paginacion"] as Paginacion;
            if (Request.Params["__EVENTTARGET"].Contains("TextBoxPaginaActual"))
            {
                string id = Request.Params["__EVENTARGUMENT"];
                PaginaSelected_Changed(id);
            }
        }
    }

    protected void GridViewResultado_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        try
        {
            List<TituloLibreriaView> lista = ViewState["titulos"] as List<TituloLibreriaView>;
            GridViewResultado.DataSource = lista;
            GridViewResultado.PageIndex = e.NewPageIndex;
            GridViewResultado.DataBind();
        }
        catch (Exception ex)
        {
        }
    }

    protected void GridViewResultado_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        try
        {
            //if (e.Row.RowType == DataControlRowType.Header)
            //{
            //    GridView grid = sender as GridView;
            //    var row = e.Row;
            //    string sortedExpression = (ViewState["currentSort"] != null ? ViewState["currentSort"].ToString() : string.Empty);
            //    int indexColumn = 0;
            //    switch (sortedExpression)
            //    {
            //        case "tituloOriginal":
            //            indexColumn = 4;
            //            break;
            //        case "titulo":
            //            indexColumn = 5;
            //            break;
            //        case "autor":
            //            indexColumn = 6;
            //            break;
            //        case "año":
            //            indexColumn = 10;
            //            break;
            //        default:
            //            indexColumn = 0;
            //            break;
            //    }
            //    if (indexColumn > 0)
            //    {
            //        bool isdescending = (ViewState["isSortDescending"] != null ? (bool)ViewState["isSortDescending"] : false);
            //        string sort = (isdescending ? "desc" : "asc");
            //        e.Row.Cells[indexColumn].Attributes.Add("data-column-sorted", sort);
            //    }
            //}


            if (e.Row.RowType == DataControlRowType.Pager)
            {
                LinkButton cmdAnterior = e.Row.FindControl("cmdAnterior") as LinkButton;
                LinkButton cmdInicio = e.Row.FindControl("cmdInicio") as LinkButton;
                LinkButton cmdFinal = e.Row.FindControl("cmdFinal") as LinkButton;
                LinkButton cmdSiguiente = e.Row.FindControl("cmdSiguiente") as LinkButton;
                TextBox textPaginaActual = e.Row.FindControl("TextBoxPaginaActual") as TextBox;
                if (textPaginaActual != null)
                {
                    textPaginaActual.Attributes.Add("onkeyup", "javascript: return autoPostbackPaginador(this,event);");
                }

                if (_Paginacion.PaginaActual == 1)
                {
                    cmdAnterior.Enabled = false;
                    cmdInicio.Enabled = false;
                    cmdFinal.Enabled = true;
                    cmdSiguiente.Enabled = true;
                }
                else if (_Paginacion.PaginaActual > 1 && _Paginacion.PaginaActual < _Paginacion.PaginasTotales)
                {
                    cmdAnterior.Enabled = true;
                    cmdInicio.Enabled = true;
                    cmdFinal.Enabled = true;
                    cmdSiguiente.Enabled = true;
                }
                else if (_Paginacion.PaginaActual == _Paginacion.PaginasTotales)
                {
                    cmdAnterior.Enabled = true;
                    cmdInicio.Enabled = true;
                    cmdFinal.Enabled = false;
                    cmdSiguiente.Enabled = false;
                }
                else
                {
                    cmdAnterior.Enabled = false;
                    cmdInicio.Enabled = false;
                    cmdFinal.Enabled = false;
                    cmdSiguiente.Enabled = false;
                }
            }


            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                TituloLibreriaView fila = e.Row.DataItem as TituloLibreriaView;
                if (fila != null)
                {
                    Label label = e.Row.FindControl("LabelAutor") as Label;
                    if (label != null)
                    {
                        string nombre = fila.Autor.NombreEspanol;
                        if (!string.IsNullOrEmpty(fila.Autor.NombreLatin))
                        {
                            nombre = nombre + "(" + fila.Autor.NombreLatin + ")";
                        }
                        else if (!string.IsNullOrEmpty(fila.Autor.NombreGriego))
                        {
                            nombre = nombre + "(" + fila.Autor.NombreGriego + ")";
                        }
                        label.Text = nombre;
                    }
                }
            }

        }
        catch (System.Exception ex)
        {
            throw ex;
        }
    }

    protected void GridViewResultado_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        LinkButton button = e.CommandSource as LinkButton;
        if (e.CommandName != "Sort")
        {
            CommandPage_Click(button, null);
        }
    }

    protected void PaginaSelected_Changed(string currentPage)
    {
        int pageInt = 0;
        Int32.TryParse(currentPage, out pageInt);
        CommandPage_Click(pageInt, null);
    }

    protected void CommandPage_Click(object sender, EventArgs e)
    {
        LinkButton button = sender as LinkButton;
        _Paginacion = (ViewState["paginacion"] != null) ? (Paginacion)ViewState["paginacion"] : new Paginacion() { PaginaActual = 1, FilasPorPagina = GridViewResultado.PageSize };
        _Paginacion.IsNavigating = true;
        if (button != null)
        {

            if (button.CommandName == "Page")
            {
                if (button.CommandArgument == "First")
                {
                    _Paginacion.PaginaActual = 1;
                }
                else if (button.CommandArgument == "Prev")
                {
                    if (_Paginacion.PaginaActual > 1)
                    {
                        _Paginacion.PaginaActual--;
                    }
                    else
                    {
                        _Paginacion.PaginaActual = 1;
                    }
                }
                else if (button.CommandArgument == "Next")
                {
                    if (_Paginacion.PaginaActual < _Paginacion.PaginasTotales)
                    {
                        _Paginacion.PaginaActual++;
                    }
                    else
                    {
                        _Paginacion.PaginaActual = _Paginacion.PaginasTotales;
                    }
                }
                else if (button.CommandArgument == "Last")
                {
                    _Paginacion.PaginaActual = _Paginacion.PaginasTotales;
                }
            }
            ViewState["paginacion"] = _Paginacion;
        }
        else
        {
            if (sender != null)
            {
                if (sender.GetType() == typeof(int))
                {
                    int numeroPagina = (int)sender;
                    if (numeroPagina <= 0)
                    {
                        numeroPagina = 1;
                    }
                    else if (numeroPagina > _Paginacion.PaginasTotales)
                    {
                        numeroPagina = _Paginacion.PaginasTotales;
                    }
                    _Paginacion.PaginaActual = numeroPagina;
                    ViewState["paginacion"] = _Paginacion;
                    // Debe ser -1 ya que el comportamiento del evento, lo incrementa en +1 al asignarlo al GridView
                    GridViewResultado_PageIndexChanging(null, new GridViewPageEventArgs(_Paginacion.PaginaActual - 1));
                }
            }
        }
    }    

    private void CargarTodos(string campoOrdenacion, bool isDescending)
    {
        _Titulos = libreriaBd.ReportePublicacionesPor(null, null, null, null, null, null, null, null, campoOrdenacion, isDescending);
        _Paginacion.PaginasTotales = (int)Math.Ceiling(((_Titulos != null ? _Titulos.Count : 0) * 1.00M) / (_Paginacion.FilasPorPagina * 1.00M));
        HiddenCampoInicio.Value = "";
        HiddenCampoFin.Value = "";
        ViewState["titulos"] = _Titulos;
        ViewState["paginacion"] = _Paginacion;
        ViewState["busquedaHabilitada"] = false;
        //ViewState["tipoBusqueda"] = "";
        ViewState["isSortDescending"] = isDescending;
        ViewState["currentSort"] = campoOrdenacion;
        if (_Titulos != null && _Titulos.Count > 0)
        {
            this.ButtonExportar.Visible = true;
        }
        else
        {
            this.ButtonExportar.Visible = false;
        }
        MostrarTitulos(_Titulos);
    }

    private void Buscar(string campoOrdenacion, bool isDescending)
    {        
        string inicio = HiddenCampoInicio.Value;
        string fin = HiddenCampoFin.Value;

        if (String.IsNullOrEmpty(inicio) & String.IsNullOrEmpty(fin))
        {
            CargarTodos(campoOrdenacion, isDescending);
        }
        else
        {
            int intDummy= -1;
            int? anioInicio = null;
            int? anioFin = null;
                        
            Int32.TryParse(inicio, out intDummy);
            anioInicio = (intDummy <= 0 ? null : new int?(intDummy));
            intDummy = -1;
            Int32.TryParse(fin, out intDummy);
            anioFin = (intDummy <= 0 ? null : new int?(intDummy));

            _Titulos = libreriaBd.ReportePublicacionesPor(anioInicio, anioFin, null, null, null, null, null, null, campoOrdenacion, isDescending);
            _Paginacion.PaginasTotales = (int)Math.Ceiling(((_Titulos != null ? _Titulos.Count : 0) * 1.00M) / (_Paginacion.FilasPorPagina * 1.00M));

            ViewState["titulos"] = _Titulos;
            ViewState["paginacion"] = _Paginacion;
            ViewState["busquedaHabilitada"] = true;
            //ViewState["tipoBusqueda"] = "";
            ViewState["isSortDescending"] = isDescending;
            ViewState["currentSort"] = campoOrdenacion;
            if (_Titulos != null && _Titulos.Count > 0)
            {
                this.ButtonExportar.Visible = true;
            }
            else
            {
                this.ButtonExportar.Visible = false;
            }
            MostrarTitulos(_Titulos);
        }
    }

    private void MostrarTitulos(List<TituloLibreriaView> lista)
    {
        this.GridViewResultado.DataSource = lista;
        this.GridViewResultado.DataBind();
    }

    protected void ButtonBuscar_Click(object sender, EventArgs e)
    {
        HiddenCampoInicio.Value = this.TextBoxInicio.Text;
        HiddenCampoFin.Value = this.TextBoxFinal.Text;
        _Paginacion.PaginaActual = 1;
        _Paginacion.IsNavigating = false;
        Buscar("año", false);
    }

    protected void LinkTodos_Click(object sender, EventArgs e)
    {
        _Paginacion.PaginaActual = 1;
        _Paginacion.IsNavigating = false;
        CargarTodos("año", false);
    }


    //protected void GridViewResultado_Sorting(object sender, GridViewSortEventArgs e)
    //{
    //    string campoOrden = e.SortExpression;
    //    bool isDescending = (ViewState["isSortDescending"] != null) ? (bool)ViewState["isSortDescending"] : false;
    //    string currentSort = (ViewState["currentSort"] != null ? ViewState["currentSort"].ToString() : string.Empty);
    //    if (currentSort != e.SortExpression)
    //    {
    //        isDescending = false;
    //    }
    //    else
    //    {
    //        if (isDescending)
    //        {
    //            isDescending = false;
    //        }
    //        else
    //        {
    //            isDescending = true;
    //        }
    //    }
    //    List<TituloLibreriaView> lista = ViewState["titulos"] as List<TituloLibreriaView>;
    //    lista = LibreriaController.TitulosOrderBy(lista, campoOrden, isDescending);
    //    ViewState["isSortDescending"] = isDescending;
    //    ViewState["currentSort"] = campoOrden;
    //    ViewState["titulos"] = lista;
    //    MostrarTitulos(lista);
    //}

    [WebMethod]
    [ScriptMethod]
    public static TituloLibreriaView CargaTitulo(int idTitulo)
    {
        TituloLibreriaView titulo = null;
        try
        {
            LibreriaController controller = new LibreriaController();
            titulo = controller.CargarPorId(idTitulo);
        }
        catch (Exception ex)
        {
            titulo = null;
            HttpContext.Current.Response.StatusCode = (int)HttpStatusCode.InternalServerError;
        }
        return titulo;
    }

}